#include<iostream>
#include<algorithm>
using namespace std;
int a[10][10];
long long int sum;
long long int ans;
int res[10000];
int m,n;//宽度，高度,行，列 
bool vis[10][10];
int dir[4][2]={{0,1},{-1,0},{0,-1},{1,0}};
void dfs(int s,int t,long long int r,int k){
    if(s<0||s>=n||t<0||t>=m) return;
        if(r==sum/2){
            res[ans++]=k;
                return;
        }
    for(int i=0;i<4;i++){
        int dx=s+dir[i][0];
        int dy=t+dir[i][1];
        if(!vis[dx][dy]){
            vis[dx][dy]=true;    
            dfs(dx,dy,r+a[dx][dy],k+1);
            vis[dx][dy]=false;
        }
    }
}
int main(){
 cin>>m;
 cin>>n;
 for(int i=0;i<n;i++){
     for(int j=0;j<m;j++){
         cin>>a[i][j];
         sum += a[i][j];
     }
 }    
 dfs(0,0,a[0][0],1);
 sort(res,res+ans);
 cout<<res[0]<<endl;
 return 0;
}
